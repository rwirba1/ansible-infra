---
- name: Install and configure Nexus
  hosts: your_target_hosts
  become: yes
  vars:
    nexus_version: latest
    nexus_user: nexus
    nexus_install_dir: /opt/nexus
    nexus_data_dir: /opt/sonatype-work

  tasks:
    - name: Install Java 1.8.0 and wget
      ansible.builtin.yum:
        name:
          - java-1.8.0-openjdk.x86_64
          - wget
        state: present

    - name: Create Nexus directories
      ansible.builtin.file:
        path: "{{ item }}"
        state: directory
        mode: '0755'
      loop:
        - "{{ nexus_install_dir }}"
        - "{{ nexus_data_dir }}"

    - name: Download Nexus
      ansible.builtin.get_url:
        url: "https://download.sonatype.com/nexus/3/nexus-{{ nexus_version }}-unix.tar.gz"
        dest: "/tmp/nexus.tar.gz"
        timeout: 60
      register: download

    - name: Extract Nexus
      ansible.builtin.unarchive:
        src: "/tmp/nexus.tar.gz"
        dest: "{{ nexus_install_dir }}"
        remote_src: yes
      when: download is changed

    - name: Find Nexus directory name
      ansible.builtin.command: ls "{{ nexus_install_dir }}"
      register: nexus_dir_name
      changed_when: false

    - name: Add Nexus user
      ansible.builtin.user:
        name: "{{ nexus_user }}"
        system: yes
        home: "{{ nexus_data_dir }}"

    - name: Change ownership of Nexus directories
      ansible.builtin.file:
        path: "{{ item }}"
        owner: "{{ nexus_user }}"
        group: "{{ nexus_user }}"
        recurse: yes
      loop:
        - "{{ nexus_install_dir }}"
        - "{{ nexus_data_dir }}"

    - name: Create Nexus service file
      ansible.builtin.template:
        src: nexus.service.j2
        dest: /etc/systemd/system/nexus.service
        mode: '0644'

    - name: Set run_as_user in nexus.rc
      ansible.builtin.lineinfile:
        path: "{{ nexus_install_dir }}/{{ nexus_dir_name.stdout }}/bin/nexus.rc"
        line: 'run_as_user="{{ nexus_user }}"'

    - name: Reload systemd
      ansible.builtin.systemd:
        daemon_reload: yes

    - name: Enable and start Nexus
      ansible.builtin.service:
        name: nexus
        enabled: yes
        state: started
